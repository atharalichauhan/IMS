@model IMS.ViewModels.ProductViewModel

@{
  ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="container-fluid">
    <div id="ui-view">
      <div class="card">
        <div class="card-header">
          <strong>Product</strong>
          <small>Form</small>
        </div>
        <div class="card-body">
          @Html.ValidationSummary(true, "", new { @class = "text-danger" })

          <div class="row">
            <div class="form-group col-lg-6">
              @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label", required = "required" })
              <div class="controls">
                <div class="input-group">
                  @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                  @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
              </div>
            </div>
            <div class="form-group col-lg-6">
              @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "col-form-label" })
              <div class="controls">
                <div class="input-group">
                  @Html.DropDownListFor(model => model.CategoryId, Model.Categories, "Select Category", new { @class = "form-control" })
                  @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="form-group col-lg-6">
              @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "col-form-label" })
              <div class="controls">
                <div class="input-group">
                  @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                </div>
              </div>
            </div>
            <div class="form-group col-lg-6">
              @Html.LabelFor(model => model.Barcode, htmlAttributes: new { @class = "col-form-label" })
              <div class="controls">
                <div class="input-group">
                  @Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "text-danger" })
                </div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="form-group col-lg-6">
              @Html.LabelFor(model => model.BatchNumber, htmlAttributes: new { @class = "col-form-label" })
              <div class="controls">
                <div class="input-group">
                  @Html.EditorFor(model => model.BatchNumber, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.BatchNumber, "", new { @class = "text-danger" })
                </div>
              </div>
            </div>
            <div class="form-group col-lg-auto">
              @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-form-label" })
              <div class="controls">
                <div class="input-group">
                  @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="form-group col-lg-12">
              @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-form-label" })
              <div class="controls">
                <div class="input-group">
                  @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                  @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
              </div>
            </div>
          </div>

          <div class="form-actions">
            <button type="submit" class="btn btn-primary">Save</button>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
          </div>
        </div>
      </div>
    </div>
  </div>
}